<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mvwchina.foundation</groupId>
    <artifactId>uums</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>unified user management system(统一用户系统)</description>

    <name>uums</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring.boot.version>2.1.1.RELEASE</spring.boot.version>
        <java.version>1.8</java.version>
        <docker.image.prefix>springboot</docker.image.prefix>
    </properties>

    <!--<scm>-->
    <!--&lt;!&ndash;connection元素表示一个只读的scm地址&ndash;&gt;-->
    <!--<connection>scm:svn:svn://svn.mvwchina.com/YSJ/Project/IMed3/services/trunk</connection>-->
    <!--&lt;!&ndash;developerConnection元素表示可写的scm地址&ndash;&gt;-->
    <!--<developerConnection>scm:svn:svn://svn.mvwchina.com/YSJ/Project/IMed3/services/trunk</developerConnection>-->
    <!--&lt;!&ndash;url表示可以在浏览器中访问的scm地址&ndash;&gt;-->
    <!--<url>svn://svn.mvwchina.com/YSJ/Project/IMed3/services/trunk</url>-->
    <!--<tag>v1.0.0</tag>-->
    <!--</scm>-->

    <!-- 项目的部署信息 -->
    <distributionManagement>
        <repository>
            <id>releases</id>
            <url>http://developer.mvwchina.com:8081/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <url>http://developer.mvwchina.com:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>basic-user</module>
        <module>basic-auth-vertx</module>
        <module>basic-auth-webflux</module>
        <module>basic-common</module>
        <module>basic-auth</module>
        <module>aspectj</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- Docker maven plugin -->
            <!--<plugin>-->
            <!--<groupId>com.spotify</groupId>-->
            <!--<artifactId>docker-maven-plugin</artifactId>-->
            <!--<version>1.2.0</version>-->
            <!--<configuration>-->
            <!--<imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
            <!--<dockerDirectory>src/main/docker</dockerDirectory>-->
            <!--<resources>-->
            <!--<resource>-->
            <!--<targetPath>/</targetPath>-->
            <!--<directory>${project.build.directory}</directory>-->
            <!--<include>${project.build.finalName}.jar</include>-->
            <!--</resource>-->
            <!--</resources>-->
            <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>

</project>