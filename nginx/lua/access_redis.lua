---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lujiewen.
--- DateTime: 2018/12/24 上午11:24
---
---
local ck = require('cookie')
local cjson = require('cjson')
local cookie = ck:new()
--local all_cookie = cookie:get_all() -- 这里获取到所有的cookie，是一个table，如果不存在则返回nil
--print(cjson.encode(all_cookie))
--print(cookie:get('X-MVW-userID'))
--print(cookie:get('access-key'))

local userID = cookie:get('X-MVW-userID')
local accessKey = cookie:get('access-key')
local deviceType = cookie:get('device-type')

if userID == nil or accessKey == nil then
    require('redirect_block')()
    return
end

local redis = require('resty.redis')
local red = redis:new()
red:set_timeout(1000) -- 1 sec
local ok, err = red:connect('127.0.0.1', 6379)
if not ok then
    ngx.say('failed to connect : ', err)
    return
end

local res, err = red:exists(userID)
if not res then
    require('redirect_block')()
    return
end

local headers = ngx.req.get_headers()
local device = deviceType or headers['device-type'] or 'PC'
local res, err = red:hexists(userID, device)
if not res then
    require('redirect_block')()
end

local res, err = red:hmget(userID, device)
local array = cjson.decode(res[1])

if accessKey ~= array[1] or os.time() * 1000 > array[4] then
    require('redirect_block')()
end